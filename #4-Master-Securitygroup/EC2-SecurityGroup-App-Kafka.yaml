# Template created by hash
Description: Security Group for App Kafka EC2 Instances

Parameters:

  VPCStackName:
    Description: Stack Name that built the VPC
    Type: String
    Default: DCHash2-VPC

  VPCId:
    Description: The VPC Id
    Type: AWS::EC2::VPC::Id

  # Security groups allowed ingress to Kafka application

#  App1-phpSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id
#
#  App2-phpSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id
#
#  App3-javaSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id
#
#  App4-phpSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id
#
#  App5-phpSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id
#
#  App6-phpSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id
#
#  App7-phpSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id

# Tagging Parameters
  Environment:
    Type: String
    AllowedValues:
      - Production
      - UAT
      - Test
  BusinessUnit:
    Type: String
    AllowedValues:
      - Charitable
      - Corporate
      - Gaming
      - Lotteries
      - Wagering
    ConstraintDescription: Must be Charitable | Corporate | Gaming | Lotteries | Wagering
  Department:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: BrandName
  Application:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: SomePlatform
  Component:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: Kafka

Resources:

  # Create Security Group
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${Component} Security Group
      VpcId: !Ref VPCId
      Tags:
      - Key: Name
        Value:  !Sub ${Environment}-${Component}-App
      - Key: Environment
        Value: !Ref Environment
      - Key: BusinessUnit
        Value: !Ref BusinessUnit
      - Key: Application
        Value: !Ref Application
      - Key: Component
        Value: !Ref Component

 # Add rules to Security Group

  # Open ports for Kafka clustering
  KafkaCluster2888IngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      ToPort: 2888
      FromPort: 2888
      SourceSecurityGroupId: !Ref SecurityGroup
      GroupId: !Ref SecurityGroup

  KafkaCluster3888IngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      ToPort: 3888
      FromPort: 3888
      SourceSecurityGroupId: !Ref SecurityGroup
      GroupId: !Ref SecurityGroup

  # Open ports for applications to access Kafka
#  App1-php2181IngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 2181
#      ToPort: 2181
#      SourceSecurityGroupId: !Ref App1-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  App1-php9092IngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 9092
#      ToPort: 9092
#      SourceSecurityGroupId: !Ref App1-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  # Data Consumer
#  App2-php2181IngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 2181
#      ToPort: 2181
#      SourceSecurityGroupId: !Ref App2-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  App2-php9092IngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 9092
#      ToPort: 9092
#      SourceSecurityGroupId: !Ref App2-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  # Data Ingestion
#  App3-java2181IngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 2181
#      ToPort: 2181
#      SourceSecurityGroupId: !Ref App3-javaSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  App3-java9092IngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 9092
#      ToPort: 9092
#      SourceSecurityGroupId: !Ref App3-javaSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  # App4-php
#  App4-php2181IngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 2181
#      ToPort: 2181
#      SourceSecurityGroupId: !Ref App4-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  App4-php9092IngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 9092
#      ToPort: 9092
#      SourceSecurityGroupId: !Ref App4-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  # POS Integration
#  App5-php2181IngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 2181
#      ToPort: 2181
#      SourceSecurityGroupId: !Ref App5-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  PosInegration9092IngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 9092
#      ToPort: 9092
#      SourceSecurityGroupId: !Ref App5-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  # App6-php
#  App6-php2181IngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 2181
#      ToPort: 2181
#      SourceSecurityGroupId: !Ref App6-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  App6-php9092IngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 9092
#      ToPort: 9092
#      SourceSecurityGroupId: !Ref App6-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  # Super Portal
#  App7-php2181IngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 2181
#      ToPort: 2181
#      SourceSecurityGroupId: !Ref App7-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  App7-php9092IngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: 9092
#      ToPort: 9092
#      SourceSecurityGroupId: !Ref App7-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
  BastionHostIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      ToPort: 22
      FromPort: 22
      SourceSecurityGroupId: sg-6b258c0d
      GroupId: !Ref SecurityGroup

Outputs:
  SecurityGroup:
    Description: The Kafka App Security Group
    Value:  !Ref SecurityGroup
    # Export:
    #   Name: !Sub "${AWS::StackName}-SecurityGroup"

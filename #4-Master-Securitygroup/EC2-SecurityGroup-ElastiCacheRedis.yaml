# Template created by hash
Description: Security Group for ElastiCache Redis

Parameters:

  VPCId:
    Type: String

# Source Security Group Id Parameters
#  App1-phpSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id
#
#  App2-phpSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id
#
#  App3-javaSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id
#
#  App4-phpSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id
#
#  App5-phpSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id
#
#  App6-phpSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id
#
#  App7-phpSecurityGroup:
#    Type: AWS::EC2::SecurityGroup::Id

# Tagging Parameters
  Environment:
    Type: String
    AllowedValues:
      - Production
      - UAT
      - Test
  BusinessUnit:
    Type: String
    AllowedValues:
      - Charitable
      - Corporate
      - Gaming
      - Lotteries
      - Wagering
    ConstraintDescription: Must be Charitable | Corporate | Gaming | Lotteries | Wagering
  Department:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: BrandName
  Application:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: SomePlatform
  Component:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: ElastiCacheRedis

Resources:
# Create Security Group
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${Component} ${Application} Security Group
      VpcId: !Ref VPCId
      Tags:
      - Key: Name
        Value:  !Sub ${Environment}-${Component}
      - Key: Environment
        Value: !Ref Environment
      - Key: BusinessUnit
        Value: !Ref BusinessUnit
      - Key: Application
        Value: !Ref Application
      - Key: Component
        Value: !Ref Component

# Add rules to Security Group
#  App1-phpIngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: '6379'
#      ToPort: '6379'
#      SourceSecurityGroupId: !Ref App1-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  App2-phpIngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: '6379'
#      ToPort: '6379'
#      SourceSecurityGroupId: !Ref App2-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  App3-javaIngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: '6379'
#      ToPort: '6379'
#      SourceSecurityGroupId: !Ref App3-javaSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  App4-phpIngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: '6379'
#      ToPort: '6379'
#      SourceSecurityGroupId: !Ref App4-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  PosIntergationIngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: '6379'
#      ToPort: '6379'
#      SourceSecurityGroupId: !Ref App5-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  App6-phpIngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: '6379'
#      ToPort: '6379'
#      SourceSecurityGroupId: !Ref App6-phpSecurityGroup
#      GroupId: !Ref SecurityGroup
#
#  App7-phpIngressRule:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#      IpProtocol: tcp
#      FromPort: '6379'
#      ToPort: '6379'
#      SourceSecurityGroupId: !Ref App7-phpSecurityGroup
#      GroupId: !Ref SecurityGroup

Outputs:
  SecurityGroup:
    Description: The ElastiCache Redis Security Group
    Value:  !Ref SecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-SecurityGroup"

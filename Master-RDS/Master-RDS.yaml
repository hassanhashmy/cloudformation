# Template created by hash
Description: Builds an AWS Relational Database Service MySQL or Aurora Instance/Cluster and adds endpoints into private DNS

# This template is very specific to MySQL 5.7 and needs updating for other DB engines or versions

Parameters:

  # Cross-Stack References Parameters
  VPCStackName:
    Description: Stack Name that built the VPC
    Type: String
    Default: UAT-VPC

  DomainStackName:
    Description: Stack name that built the Route 53 Private Hosted Zone
    Type: String
    Default: UAT-Route53

  AmplifyStackName:
    Description: Stack Name that built Amplify
    Type: String
    Default: UAT-Amplify

  DataConsumerStackName:
    Description: Stack Name that built Data Ingestion
    Type: String
    Default: UAT-DataConsumer

  DataIngestionStackName:
    Description: Stack Name that built Data Ingestion
    Type: String
    Default: UAT-DataIngestion

  KnoxStackName:
    Description: Stack Name that built KNOX
    Type: String
    Default: UAT-KNOX

  PosIntegrationStackName:
    Description: Stack Name that built POS Integration
    Type: String
    Default: UAT-POSIntegration

  SoldiStackName:
    Description: Stack Name that built Soldi
    Type: String
    Default: UAT-Soldi

  SuperPortalStackName:
    Description: Stack Name that built SuperPortal
    Type: String
    Default: UAT-SuperPortal

  #Build Parameters
  BuildBucket:
    Type: String
    Default: DCHash2buildbucket

  Route53RecordSetTemplateFile:
    Type: String
    Default: Route53-RecordSet.yaml

  RDSSecurityGroupTemplateFile:
    Description: The name of the template file for the RDS Security Group
    Type: String
    Default: EC2-SecurityGroup-RDS-MySQL.yaml

  AuroraTemplateFile:
    Description: The name of the template file for Aurora. Leave blank if creating MySQL
    Type: String
    Default: RDS-Aurora.yaml

  MySqlTemplateFile:
    Description: The name of the template file for MySQL. Leave blank if creating Aurora
    Type: String
    Default: RDS-MySQL.yaml

  #RDS Parameters
  DBInstanceClass:
    Type: String
    AllowedValues:
    - db.m3.2xlarge
    - db.m3.large
    - db.m3.medium
    - db.m3.xlarge
    - db.m4.10xlarge
    - db.m4.2xlarge
    - db.m4.4xlarge
    - db.m4.large
    - db.m4.xlarge
    - db.r3.2xlarge
    - db.r3.4xlarge
    - db.r3.8xlarge
    - db.r3.large
    - db.r3.xlarge
    - db.t2.large
    - db.t2.medium
    - db.t2.small
    Default: db.t2.small

  RDSDatabaseEngineType:
    Type: String
    AllowedValues:
    - MySQL
    - Aurora
    Default: MySQL

  DBInstanceName:
    Description: Database Instance name. Must be alphanumeric and lower case
    Type: String
    AllowedPattern: "[a-z0-9]+"
    Default: DCHash2db

  AllocatedStorage:
    Type: Number
    Default: 200

  MasterUsername:
    Type: String
    Default: master

  MasterPassword:
    Type: String
    Default: 'P!eas3beL0yal'
    NoEcho: True

  DBPort:
    Type: Number
    Default: 3306

  PreferredBackupWindow:
    Description: Backup Window in UTC
    Type: String
    Default: 13:00-14:00 #UTC Time

  PreferredMaintenanceWindow:
    Description: Maintenance Window in UTC. Format is DDD:HH:MM-DDD:HH:MM. Maintenance window should be after backup window
    Type: String
    Default: mon:14:00-mon:14:30 #UTC Time

  MySQLEngineVersion:
    Type: String
    Default: 5.7.17

  # Tagging Parameters
  # NOTE: Environment determines ultimate RDS configuration (see RDS child templates)
  Environment:
    Description: Production or NonProduction
    Type: String
    Default: UAT
    AllowedValues:
      - Production
      - UAT
      - Test

  BusinessUnit:
    Description: Some Business Unit
    Type: String
    Default: Gaming
    AllowedValues:
      - Charitable
      - Corporate
      - Gaming
      - Lotteries
      - Wagering
    ConstraintDescription: Must be Charitable | Corporate | Gaming | Lotteries | Wagering

  Department:
    Description: Department
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: BrandName

  Application:
    Description: Specific Application
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: SomePlatform

  Component:
    Description: The component name
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: RDS

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:

    - Label:
        default: CloudFormation Template Files and Location
      Parameters:
      - BuildBucket
      - Route53RecordSetTemplateFile
      - RDSSecurityGroupTemplateFile
      - AuroraTemplateFile
      - MySqlTemplateFile
    - Label:
        default: CloudFormation Cross-Stack Parameters
      Parameters:
      - VPCStackName
      - DomainStackName
      - AmplifyStackName
      - DataConsumerStackName
      - DataIngestionStackName
      - KnoxStackName
      - PosIntegrationStackName
      - SoldiStackName
      - SuperPortalStackName
    - Label:
        default: RDS Database paramaters
      Parameters:
      - RDSDatabaseEngineType
      - DBInstanceName
      - DBInstanceClass
      - DBPort
      - AllocatedStorage
      - MySQLEngineVersion
      - PreferredBackupWindow
      - PreferredMaintenanceWindow
      - MasterUsername
      - MasterPassword
    - Label:
        default: Tagging Parameters
      Parameters:
      - Environment
      - BusinessUnit
      - Department
      - Application
      - Component

Conditions:

  IsAurora: !Equals [!Ref RDSDatabaseEngineType, "Aurora" ]
  IsMySQL: !Equals [!Ref RDSDatabaseEngineType, "MySQL" ]


Resources:

  SecurityGroup:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${RDSSecurityGroupTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component
        VPCId:
          Fn::ImportValue: !Sub ${VPCStackName}-VPCID
#        AmplifySecurityGroup:
#          Fn::ImportValue: !Sub ${AmplifyStackName}-SecurityGroup
#        DataConsumerSecurityGroup:
#          Fn::ImportValue: !Sub ${DataConsumerStackName}-SecurityGroup
#        DataIngestionSecurityGroup:
#          Fn::ImportValue: !Sub ${DataIngestionStackName}-SecurityGroup
#        KnoxSecurityGroup:
#          Fn::ImportValue: !Sub ${KnoxStackName}-SecurityGroup
#        PosIntegrationSecurityGroup:
#          Fn::ImportValue: !Sub ${PosIntegrationStackName}-SecurityGroup
#        SoldiSecurityGroup:
#          Fn::ImportValue: !Sub ${SoldiStackName}-SecurityGroup
#        SuperPortalSecurityGroup:
#          Fn::ImportValue: !Sub ${SuperPortalStackName}-SecurityGroup

  MySQLInstance:
    Type: AWS::CloudFormation::Stack
    Condition: IsMySQL
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/RDS-${RDSDatabaseEngineType}.yaml
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component
        VPCID:
          Fn::ImportValue: !Sub ${VPCStackName}-VPCID
        VPCCIDR:
          Fn::ImportValue: !Sub ${VPCStackName}-VPCCIDR
        DBSubnetList:
          Fn::Join:
          - ","
          - - Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetA
            - Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetB
            - Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetC
        MySQLEngineVersion: !Ref MySQLEngineVersion
        DBInstanceName: !Ref DBInstanceName
        DBInstanceClass: !Ref DBInstanceClass
        AllocatedStorage: !Ref AllocatedStorage
        MasterUsername: !Ref MasterUsername
        MasterPassword: !Ref MasterPassword
        DBPort: !Ref DBPort
        PreferredBackupWindow: !Ref PreferredBackupWindow
        PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
        SecurityGroup: !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]

  AuroraInstance:
    Type: AWS::CloudFormation::Stack
    Condition: IsAurora
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/RDS-${RDSDatabaseEngineType}.yaml
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component
        VPCID:
          Fn::ImportValue: !Sub ${VPCStackName}-VPCID
        VPCCIDR:
          Fn::ImportValue: !Sub ${VPCStackName}-VPCCIDR
        DBSubnetList:
          Fn::Join:
          - ","
          - - Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetA
            - Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetB
            - Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetC
        DBName: !Ref DBInstanceName
        DBInstanceClass: !Ref DBInstanceClass
        MasterUsername: !Ref MasterUsername
        MasterPassword: !Ref MasterPassword
        DBPort: !Ref DBPort
        PreferredBackupWindow: !Ref PreferredBackupWindow
        PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
        SecurityGroup: !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]

  Route53RecordSet:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${Route53RecordSetTemplateFile}
      Parameters:
        AliasTarget: ''
        AliasHostedZoneId: ''
        HostedZoneName: ''
        RecordType: CNAME
        HostName: !Ref DBInstanceName
        DomainName:
          Fn::ImportValue: !Sub ${DomainStackName}-Private-DomainName
        TTL: 300
        DestinationAddress: !If [ IsAurora, !GetAtt [ AuroraInstance, Outputs.EndPointAddress ], !GetAtt [ MySQLInstance, Outputs.EndPointAddress ] ]

Outputs:
  SecurityGroup:
    Description: The RDS Security Group
    Value: !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroup

  EndPointAddress:
    Description: The EndPoint Adress of the RDS Instance
    Value: !If [IsAurora, !GetAtt [AuroraInstance, Outputs.EndPointAddress], !GetAtt [MySQLInstance, Outputs.EndPointAddress]]
    Export:
      Name: !Sub ${AWS::StackName}-RDSEndpointAddress

  EndPointPort:
    Description: The EndPoint Port of the RDS Instance
    Value: !If [IsAurora, !GetAtt [AuroraInstance, Outputs.EndPointPort], !GetAtt [MySQLInstance, Outputs.EndPointPort]]
    Export:
      Name: !Sub ${AWS::StackName}-RDSEndPointPort

  ReaderEndPointAddress:
    Condition: IsAurora
    Description: The Reader EndPoint Adress of the RDS Instance (Aurora Only)
    Value: !GetAtt [AuroraInstance, Outputs.ReaderEndPoint]
    Export:
      Name: !Sub ${AWS::StackName}-ReaderEndpointAddress

  RecordSet:
    Description: ElasticSearch Record Set
    Value: !GetAtt [ Route53RecordSet, Outputs.RecordSet ]
    Export:
      Name: !Sub ${AWS::StackName}-RecordSet

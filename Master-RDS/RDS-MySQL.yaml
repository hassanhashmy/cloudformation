# Template created by hash
Description: Creates and configures a RDS MySQL Instance with Encrypted Storage. Depending on input different configurations will apply
  Production and UAT - Multi-AZ, 14 Day Automated Backups, Enhanced Monitoring (30 sec intervals), Preferred Maintance Window Monday 4-4:30AM, Backup Windows 3-4 AM
  Test - Single-AZ, No Automated Backups, No Enhanced Monitoring, Preferred Maintance Window Monday 4-4:30AM, No Backup Window

Parameters:

  VPCID:
    Type: AWS::EC2::VPC::Id

  DBSubnetList:
    Type: List<AWS::EC2::Subnet::Id>

  VPCCIDR:
    Type: String

  # NOTE:
  # List of Instance Types only includes
  # types that allow for EBS Encryption:
  # M3, M4, T2 (from .small up), R3
  # See: http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html#Overview.Encryption.Availability
  DBInstanceClass:
    Type: String
    AllowedValues:
    - db.m3.2xlarge
    - db.m3.large
    - db.m3.medium
    - db.m3.xlarge
    - db.m4.10xlarge
    - db.m4.2xlarge
    - db.m4.4xlarge
    - db.m4.large
    - db.m4.xlarge
    - db.r3.2xlarge
    - db.r3.4xlarge
    - db.r3.8xlarge
    - db.r3.large
    - db.r3.xlarge
    - db.t2.large
    - db.t2.medium
    - db.t2.small
    Default: db.t2.small

  DBInstanceName:
    Type: String
    AllowedPattern: "[a-z0-9]+"

  AllocatedStorage:
    Type: Number

  MasterUsername:
    Type: String

  MasterPassword:
    Type: String
    NoEcho: True

  DBPort:
    Type: Number

  MySQLEngineVersion:
    Type: String

  PreferredBackupWindow:
    Type: String

  PreferredMaintenanceWindow:
    Type: String

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id

# Tagging Parameters
  Environment:
    Type: String
    AllowedValues:
      - Production
      - UAT
      - Test

  BusinessUnit:
    Type: String
    AllowedValues:
      - Charitable
      - Corporate
      - Gaming
      - Lotteries
      - Wagering
    ConstraintDescription: Must be Charitable | Corporate | Gaming | Lotteries | Wagering

  Department:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: BrandName

  Application:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: SomePlatform

  Component:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: RDS

Mappings:

  EnvironmentConfig:
    Production:
      MultiAZ: true
      MonitoringInterval: 30
      BackupRetentionPeriod: 14

    UAT:
      MultiAZ: true
      MonitoringInterval: 30
      BackupRetentionPeriod: 14

    Test:
      MultiAZ: false
      MonitoringInterval: 0
      BackupRetentionPeriod: 1

  MySQLEngine:
    5.7.17:
      Family: MySQL5.7

Conditions:
  IsProduction: !Or [ !Equals [ !Ref Environment, Production], !Equals [ !Ref Environment, UAT ] ]

Resources:

    DBParameterGroup:
      Type: AWS::RDS::DBParameterGroup
      Properties:
        Description: !Sub Parameter Group for ${Environment} ${Application}
        Family: !FindInMap [ MySQLEngine, !Ref MySQLEngineVersion, Family ]

    DBSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupDescription: Subnet Group for ${Environment} ${Application}
        SubnetIds: !Ref DBSubnetList

    MonitoringRole:
      Condition: IsProduction
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Sid: "RDSEnhancedMonitoringRole"
            Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: sts:AssumeRole
        Path: "/"
        ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole

    RDSInstance:
      Type: AWS::RDS::DBInstance
      DeletionPolicy: Snapshot
      Properties:
        AllocatedStorage: !Ref AllocatedStorage
        BackupRetentionPeriod: !FindInMap [EnvironmentConfig, !Ref Environment, BackupRetentionPeriod ]
        CopyTagsToSnapshot: true
        DBInstanceClass: !Ref DBInstanceClass
        DBParameterGroupName: !Ref DBParameterGroup
        DBSubnetGroupName: !Ref DBSubnetGroup
        DBName: !Ref DBInstanceName
        Engine: MySQL
        EngineVersion: !Ref MySQLEngineVersion
        MasterUsername: !Ref MasterUsername
        MasterUserPassword: !Ref MasterPassword
        MonitoringInterval: !FindInMap [EnvironmentConfig, !Ref Environment, MonitoringInterval ]
        MonitoringRoleArn: !If [IsProduction, !GetAtt [ MonitoringRole, "Arn"],  !Ref "AWS::NoValue" ]
        MultiAZ: !FindInMap [EnvironmentConfig, !Ref Environment, MultiAZ ]
        Port: !Ref DBPort
        PreferredBackupWindow: !Ref PreferredBackupWindow
        PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
        PubliclyAccessible: False
        StorageEncrypted: True
        StorageType: gp2
        VPCSecurityGroups:
        - !Ref SecurityGroup
        Tags:
          - Key: Name
            Value:  !Sub ${Component}-${Environment}-${Application}
          - Key: Environment
            Value: !Ref Environment
          - Key: BusinessUnit
            Value: !Ref BusinessUnit
          - Key: Application
            Value: !Ref Application
          - Key: Component
            Value: !Ref Component

Outputs:

  EndPointAddress:
    Description: The EndPoint Address of the RDS MySQL Instance
    Value: !GetAtt [ RDSInstance, Endpoint.Address]

  EndPointPort:
    Description: The EndPoint Port of the RDS MySQL Instance
    Value: !GetAtt [ RDSInstance, Endpoint.Port]

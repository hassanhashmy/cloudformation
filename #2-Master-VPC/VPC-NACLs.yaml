#Template created by hash
Description: Deploy NACL tables and rules, and associate the tables with the subnets
Parameters:
# VPC Parameters
  VPCID:
    Type: AWS::EC2::VPC::Id
  VPCCIDR:
    Type: String
    AllowedPattern: "\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}/\\d{1,2}"
  PublicSubnetA:
    Type: AWS::EC2::Subnet::Id
  PublicSubnetB:
    Type: AWS::EC2::Subnet::Id
  PublicSubnetC:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnetA:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnetB:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnetC:
    Type: AWS::EC2::Subnet::Id

# Tagging Parameters
  Environment:
    Type: String
    AllowedValues:
      - Production
      - UAT
      - Test
  BusinessUnit:
    Type: String
    AllowedValues:
      - Charitable
      - Corporate
      - Gaming
      - Lotteries
      - Wagering
  Department:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: BrandName
  Application:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: SomePlatform
Resources:

# Create empty NACLs

  # Public subnet NACL table
  PublicNetworkACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPCID
      Tags:
       - Key: Name
         Value: !Sub Public-${Environment}-${Application}-NACL
       - Key: BusinessUnit
         Value: !Ref BusinessUnit
       - Key: Environment
         Value: !Ref Environment
       - Key: Department
         Value: !Ref Department
       - Key: Application
         Value: !Ref Application

  # Private subnet NACL table
  PrivateNetworkACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPCID
      Tags:
       - Key: Name
         Value: !Sub Private-${Environment}-${Application}-NACL
       - Key: BusinessUnit
         Value: !Ref BusinessUnit
       - Key: Environment
         Value: !Ref Environment
       - Key: Department
         Value: !Ref Department
       - Key: Application
         Value: !Ref Application

  #Allow access to the public Internet
  AllowPubACLIngressHTTPTCPAll:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: PublicNetworkACL
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref PublicNetworkACL
      PortRange:
        From: '80'
        To: '80'
      Protocol: '6'
      RuleAction: allow
      RuleNumber: '100'

  #Allow access to public subnets
  AllowPubACLIngressHTTPSTCPAll:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: PublicNetworkACL
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref PublicNetworkACL
      PortRange:
        From: '443'
        To: '443'
      Protocol: '6'
      RuleAction: allow
      RuleNumber: '200'
  AllowPubACLIngressHighPortsTCPAll:
     Type: AWS::EC2::NetworkAclEntry
     DependsOn: PublicNetworkACL
     Properties:
       CidrBlock: 0.0.0.0/0
       Egress: false
       NetworkAclId: !Ref PublicNetworkACL
       PortRange:
         From: '1024'
         To: '65535'
       Protocol: '6'
       RuleAction: allow
       RuleNumber: '300'

  #Allow Egress of all traffic
  AllowPubACLEgressAllPorts:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: PublicNetworkACL
    Properties:
       CidrBlock: 0.0.0.0/0
       Egress: true
       NetworkAclId: !Ref PublicNetworkACL
       Protocol: -1
       RuleAction: allow
       RuleNumber: '100'

  #Allow access to private subnets

#  AllowPriACLIngressFromInternetAllPorts:
#    Type: AWS::EC2::NetworkAclEntry
#    DependsOn: PrivateNetworkACL
#    Properties:
#      CidrBlock: 0.0.0.0/0
#      Egress: false
#      NetworkAclId: !Ref PrivateNetworkACL
#      PortRange:
#        From: '1'
#        To: '65535'
#      Protocol: '6'
#      RuleAction: allow
#      RuleNumber: '100'

  AllowPriACLIngressAllTCPVPC:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: PrivateNetworkACL
    Properties:
      CidrBlock: !Ref VPCCIDR
      Egress: false
      NetworkAclId: !Ref PrivateNetworkACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: '100'
  AllowPriACLIngressAllTCP10:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: PrivateNetworkACL
    Properties:
      CidrBlock: 10.0.0.0/8
      Egress: false
      NetworkAclId: !Ref PrivateNetworkACL
      PortRange:
        From: '0'
        To: '65535'
      Protocol: '6'
      RuleAction: allow
      RuleNumber: '200'

  AllowPriACLIngressEphemeralAll:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: PrivateNetworkACL
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref PrivateNetworkACL
      PortRange:
        From: 1024
        To: 65535
      Protocol: 6
      RuleAction: allow
      RuleNumber: '300'

  #Allow Egress of all traffic
  AllowPriACLEgressAllPorts:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn: PrivateNetworkACL
    Properties:
       CidrBlock: 0.0.0.0/0
       Egress: true
       NetworkAclId: !Ref PrivateNetworkACL
       Protocol: -1
       RuleAction: allow
       RuleNumber: '100'

#Associate subnets with the nw NACls
  AssocSubnetPubAtoACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      NetworkAclId: !Ref PublicNetworkACL
  AssocSubnetPubBtoACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      NetworkAclId: !Ref PublicNetworkACL
  AssocSubnetPubCtoACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      NetworkAclId: !Ref PublicNetworkACL
  AssocSubnetPriAtoACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      NetworkAclId: !Ref PrivateNetworkACL
  AssocSubnetPriBtoACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      NetworkAclId: !Ref PrivateNetworkACL
  AssocSubnetPriCtoACL:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetC
      NetworkAclId: !Ref PrivateNetworkACL

Outputs:
  PublicNetworkACL:
    Description: The ID of the Public Network ACL
    Value: !Ref PublicNetworkACL
    Export:
      Name: !Sub "${AWS::StackName}-PublicNetworkACL"
  PrivateNetworkACL:
    Description: The ID of the Private Network ACL
    Value: !Ref PrivateNetworkACL
    Export:
      Name: !Sub "${AWS::StackName}-PrivateNetworkACL"

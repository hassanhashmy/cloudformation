#Template created by hash
Description: Deploy NAT Gateways into three AZs
Parameters:

# Note that CloudFormation for NAT Gateway resources does not support tagging as of September 2017

# VPC Subnet Parameters
  PublicSubnetA:
    Type: AWS::EC2::Subnet::Id
  PublicSubnetB:
    Type: AWS::EC2::Subnet::Id
  PublicSubnetC:
    Type: AWS::EC2::Subnet::Id
# Route Table IDs
  PrivateARouteTable:
    Type: String
    AllowedPattern: "rtb-[a-f0-9]{8,}"
  PrivateBRouteTable:
    Type: String
    AllowedPattern: "rtb-[a-f0-9]{8,}"
  PrivateCRouteTable:
    Type: String
    AllowedPattern: "rtb-[a-f0-9]{8,}"

Resources:

# Create Elastic IPs for NAT Gateways
  EIPA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  EIPB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  EIPC:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

# Create NAT Gateways, one in each public subnet
  NatGatewayA:
    Type: AWS::EC2::NatGateway
    DependsOn: EIPA
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIPA
        - AllocationId
      SubnetId: !Ref PublicSubnetA
  NatGatewayB:
    Type: AWS::EC2::NatGateway
    DependsOn: EIPB
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIPB
        - AllocationId
      SubnetId: !Ref PublicSubnetB
  NatGatewayC:
    Type: AWS::EC2::NatGateway
    DependsOn: EIPC
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIPC
        - AllocationId
      SubnetId: !Ref PublicSubnetC

# Add default routes in private subnet route tables to point to new NAT Gateways
  PrivateToNATA:
    Type: AWS::EC2::Route
    DependsOn: NatGatewayA
    Properties:
      RouteTableId: !Ref PrivateARouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA
  PrivateToNATB:
    Type: AWS::EC2::Route
    DependsOn: NatGatewayB
    Properties:
      RouteTableId: !Ref PrivateBRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB
  PrivateToNATC:
    Type: AWS::EC2::Route
    DependsOn: NatGatewayC
    Properties:
      RouteTableId: !Ref PrivateCRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayC
Outputs:
  EIPA:
    Description: The EIP used for the NAT Gateway A
    Value: !Ref EIPA
    Export:
      Name: !Sub "${AWS::StackName}-EIPA"
  EIPB:
    Description: The EIP used for the NAT Gateway B
    Value: !Ref EIPB
    Export:
      Name: !Sub "${AWS::StackName}-EIPB"
  EIPC:
    Description: The EIP used for the NAT Gateway C
    Value: !Ref EIPC
    Export:
      Name: !Sub "${AWS::StackName}-EIPC"
  NatGatewayA:
    Description: ID of NAT Gateway A
    Value: !Ref NatGatewayA
    Export:
      Name: !Sub "${AWS::StackName}-NatGatewayA"
  NatGatewayB:
    Description: ID of NAT Gateway B
    Value: !Ref NatGatewayB
    Export:
      Name: !Sub "${AWS::StackName}-NatGatewayB"
  NatGatewayC:
    Description: ID of NAT Gateway C
    Value: !Ref NatGatewayC
    Export:
      Name: !Sub "${AWS::StackName}-NatGatewayC"

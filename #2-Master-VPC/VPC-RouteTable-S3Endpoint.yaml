# Template created by hash
Description: Deploy Route Tables, enable route propogation from VGW, and deploy an S3 Endpoint and S3 Endpoint Policy
Parameters:
# VPC Details
  VPCID:
    Type: AWS::EC2::VPC::Id
  IGWID:
    Type: String
  VGWID:
    Type: String
  PublicSubnetA:
    Type: AWS::EC2::Subnet::Id
  PublicSubnetB:
    Type: AWS::EC2::Subnet::Id
  PublicSubnetC:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnetA:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnetB:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnetC:
    Type: AWS::EC2::Subnet::Id

# Tagging Parameters
  Environment:
    Description: Production or NonProduction
    Type: String
    AllowedValues:
      - Production
      - UAT
      - Test
  BusinessUnit:
    Type: String
    AllowedValues:
      - Charitable
      - Corporate
      - Gaming
      - Lotteries
      - Wagering
    ConstraintDescription: Must be Charitable | Corporate | Gaming | Lotteries | Wagering
  Application:
    Type: String
    Default: SomePlatform
  Department:
    Type: String
    Default: BrandName

Resources:

# Create new public and private route tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCID
      Tags:
       - Key: Name
         Value: !Sub ${Environment}-${Application}-Public
       - Key: Environment
         Value: !Ref Environment
       - Key: Application
         Value: !Ref Application
       - Key: BusinessUnit
         Value: !Ref BusinessUnit
  PrivateARouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCID
      Tags:
       - Key: Name
         Value: !Sub ${Environment}-${Application}-Private-A
       - Key: Environment
         Value: !Ref Environment
       - Key: Application
         Value: !Ref Application
       - Key: BusinessUnit
         Value: !Ref BusinessUnit
  PrivateBRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCID
      Tags:
       - Key: Name
         Value: !Sub ${Environment}-${Application}-Private-B
       - Key: Environment
         Value: !Ref Environment
       - Key: Application
         Value: !Ref Application
       - Key: BusinessUnit
         Value: !Ref BusinessUnit
  PrivateCRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCID
      Tags:
       - Key: Name
         Value: !Sub ${Environment}-${Application}-Private-C
       - Key: Environment
         Value: !Ref Environment
       - Key: Application
         Value: !Ref Application
       - Key: BusinessUnit
         Value: !Ref BusinessUnit
#Public Route Table Rules
  PubDefaultRoutetoIGW:
    Type: AWS::EC2::Route
    DependsOn: PublicRouteTable
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGWID
      RouteTableId: !Ref PublicRouteTable

# Associate subnets with new route tables.
# Public subnets can share a route table.
# Private subnets should each have their own route table so we can route internet-bound
#   traffic to the NAT gateway in the same AZ as that subnet.
  AssocPublicSubnetA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: PublicRouteTable
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetA
  AssocPublicSubnetB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: PublicRouteTable
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetB
  AssocPublicSubnetC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: PublicRouteTable
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetC
  AssocPrivateSubnetA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: PrivateARouteTable
    Properties:
      RouteTableId: !Ref PrivateARouteTable
      SubnetId: !Ref PrivateSubnetA
  AssocPrivateSubnetB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: PrivateARouteTable
    Properties:
      RouteTableId: !Ref PrivateBRouteTable
      SubnetId: !Ref PrivateSubnetB
  AssocPrivateSubnetC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: PrivateCRouteTable
    Properties:
      RouteTableId: !Ref PrivateCRouteTable
      SubnetId: !Ref PrivateSubnetC

# Enable route propagation on the route tables
# This allows for routes published up the Direct Connect by BPG to be propagated to the VPC route tables
  VPNGatewayRouteProp:
    Type: "AWS::EC2::VPNGatewayRoutePropagation"
    DependsOn:
       - PublicRouteTable
       - PrivateARouteTable
       - PrivateBRouteTable
       - PrivateCRouteTable
    Properties:
      RouteTableIds:
        - !Ref PublicRouteTable
        - !Ref PrivateARouteTable
        - !Ref PrivateBRouteTable
        - !Ref PrivateCRouteTable
      VpnGatewayId: !Ref VGWID

#Create S3 Endpoint and add routes to route tables
  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    DependsOn:
       - PublicRouteTable
       - PrivateARouteTable
       - PrivateBRouteTable
       - PrivateCRouteTable
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal: "*"
          Action: "*"
          Resource: "*"
      RouteTableIds:
        - !Ref PublicRouteTable
        - !Ref PrivateARouteTable
        - !Ref PrivateBRouteTable
        - !Ref PrivateCRouteTable
      ServiceName:
        Fn::Join:
        - ''
        - - com.amazonaws.
          - Ref: AWS::Region
          - ".s3"
      VpcId: !Ref VPCID

Outputs:
  S3Endpoint:
    Description: The ID Of the S3 Endpoint
    Value: !Ref S3Endpoint
    Export:
      Name: !Sub "${AWS::StackName}-S3Endpoint"
  PublicRouteTable:
    Description: The ID of the Public Route Table
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub "${AWS::StackName}-PublicRouteTable"
  PrivateARouteTable:
    Description: The ID of the Private A Route Table
    Value: !Ref PrivateARouteTable
    Export:
      Name: !Sub "${AWS::StackName}-PrivateARouteTable"
  PrivateBRouteTable:
    Description: The ID of the Private B Route Table
    Value: !Ref PrivateBRouteTable
    Export:
      Name: !Sub "${AWS::StackName}-PrivateBRouteTable"
  PrivateCRouteTable:
    Description: The ID of the Private C Route Table
    Value: !Ref PrivateCRouteTable
    Export:
      Name: !Sub "${AWS::StackName}-PrivateCRouteTable"

# Template created by hash
Description: WAF configuration shared by all CloudFront distributions in this Account
Parameters:

# Note that Tagging is not currently supported by WAF (Sept 2017)
  WebACLName:
    Type: String
    Default: PreProdDCHash2
    AllowedPattern: '[a-zA-Z0-9]+'
    Description: Enter the name you want to use for the WebACL. This value is also
      added as a prefix for the names of the rules, conditions, and CloudWatch metrics
      created by this template.

  VPCStackName:
    Description: Stack Name that built the VPC
    Type: String
    Default: PreProd-Master-VPC

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Web ACL Name for Common Attack Protection
      Parameters:
      - WebACLName
    - Label:
        default: Cross Stack Parameters
      Parameters:
      - VPCStackName

Resources:

  # Create the WAF ACL table
  WebACL:
    Type: AWS::WAF::WebACL
    Properties:
      Name: !Ref 'WebACLName'
      DefaultAction:
        Type: ALLOW
      MetricName: !Ref 'WebACLName'
      Rules:
      - Action:
          Type: BLOCK
        Priority: 1
        RuleId: !Ref "ManualIPBlacklistRule"
      - Action:
          Type: COUNT
        Priority: 2
        RuleId: !Ref 'SizeMatchRule'
      - Action:
          Type: BLOCK
        Priority: 3
        RuleId: !Ref 'SqliRule'
      - Action:
          Type: BLOCK
        Priority: 4
        RuleId: !Ref 'XssRule'
      - Action:
          Type: BLOCK
        Priority: 5
        RuleId: !Ref 'ManualIPWhitelistRule'

  # Add rules to WAF table
  SqliRule:
    Type: AWS::WAF::Rule
    Properties:
      Name: !Sub ${WebACLName}SqliRule
      MetricName: !Sub ${WebACLName}SqliRule
      Predicates:
      - DataId: !Ref SqliMatchSet
        Negated: false
        Type: SqlInjectionMatch

  XssRule:
    Type: AWS::WAF::Rule
    Properties:
      Name: !Sub ${WebACLName}XssRule
      MetricName: !Sub ${WebACLName}XssRule
      Predicates:
      - DataId: !Ref XssMatchSet
        Negated: false
        Type: XssMatch

  SizeMatchRule:
    Type: AWS::WAF::Rule
    Properties:
      Name: !Sub ${WebACLName}LargeBodyMatchRule
      MetricName: !Sub ${WebACLName}DetectLargeBody
      Predicates:
      - DataId: !Ref SizeMatchSet
        Negated: false
        Type: SizeConstraint

  ManualIPBlacklistRule:
    Type: AWS::WAF::Rule
    Properties:
      Name: !Sub ${WebACLName}ManualIPBlockRule
      MetricName: !Sub ${WebACLName}ManualIPBlockRule
      Predicates:
      - DataId: !Ref WAFManualIPBlacklistSet
        Negated: false
        Type: IPMatch

  ManualIPWhitelistRule:
    Type: AWS::WAF::Rule
    Properties:
      Name: !Sub ${WebACLName}ManualIPWhitelistRule
      MetricName: !Sub ${WebACLName}ManualIPWhitelistRule
      Predicates:
      - DataId: !Ref WAFManualIPWhitelistSet
        Negated: true
        Type: IPMatch

  # Rule values
  WAFManualIPBlacklistSet:
    Type: AWS::WAF::IPSet
    Properties:
      Name: Manual IP Blacklist Set

  WAFManualIPWhitelistSet:
    Type: AWS::WAF::IPSet
    Properties:
      Name: Manual IP Whitelist Set
      IPSetDescriptors:
        -
          Type: "IPV4"
          Value:
            Fn::Join:
            - ''
            - - Fn::ImportValue: !Sub "${VPCStackName}-NATEIPA"
              - "/32"
        -
          Type: "IPV4"
          Value:
            Fn::Join:
            - ''
            - - Fn::ImportValue: !Sub "${VPCStackName}-NATEIPB"
              - "/32"
        -
          Type: "IPV4"
          Value:
            Fn::Join:
            - ''
            - - Fn::ImportValue: !Sub "${VPCStackName}-NATEIPC"
              - "/32"
        -
          Type: "IPV4"
          Value: "20X.1X.XXX.1/32"
        -
          Type: "IPV4"
          Value: "20X.X4.XXX.1/32"
        -
          Type: "IPV4"
          Value: "X9.XX5.XXX.XXX/32"
        -
          Type: "IPV4"
          Value: "XX2.X76.X3X.XX8/32"
        -
          Type: "IPV4"
          Value: "XX2.X76.X7X.XX1/32"


  SizeMatchSet:
    Type: AWS::WAF::SizeConstraintSet
    Properties:
      Name: !Sub ${WebACLName}LargeBodyMatch
      SizeConstraints:
      - FieldToMatch:
          Type: BODY
        ComparisonOperator: GT
        Size: '8192'
        TextTransformation: NONE

  SqliMatchSet:
    Type: AWS::WAF::SqlInjectionMatchSet
    Properties:
      Name: !Sub ${WebACLName}SqliMatch
      SqlInjectionMatchTuples:
      - FieldToMatch:
          Type: QUERY_STRING
        TextTransformation: URL_DECODE
      - FieldToMatch:
          Type: QUERY_STRING
        TextTransformation: HTML_ENTITY_DECODE
      - FieldToMatch:
          Type: BODY
        TextTransformation: URL_DECODE
      - FieldToMatch:
          Type: BODY
        TextTransformation: HTML_ENTITY_DECODE
      - FieldToMatch:
          Type: URI
        TextTransformation: URL_DECODE

  XssMatchSet:
    Type: AWS::WAF::XssMatchSet
    Properties:
      Name: !Sub ${WebACLName}-XssMatch
      XssMatchTuples:
      - FieldToMatch:
          Type: QUERY_STRING
        TextTransformation: URL_DECODE
      - FieldToMatch:
          Type: QUERY_STRING
        TextTransformation: HTML_ENTITY_DECODE
      - FieldToMatch:
          Type: BODY
        TextTransformation: URL_DECODE
      - FieldToMatch:
          Type: BODY
        TextTransformation: HTML_ENTITY_DECODE
      - FieldToMatch:
          Type: URI
        TextTransformation: URL_DECODE

Outputs:
  WebACLId:
    Value: !Ref WebACL
    Export:
      Name: !Sub ${AWS::StackName}-WebACLId

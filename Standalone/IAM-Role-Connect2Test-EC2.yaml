# Template created by hash
Description: IAM Role and Instance Profile for DCHash2 EC2 instances in Test
Parameters:

  # Add additional ManagedPolicy parameters if more than one policy will be attached
  IAMManagedPolicyEC2:
    Type: String
    Default: IAM-ManagedPolicy-EC2Instances

  # Tagging Parameters
  BusinessUnit:
    Type: String
    AllowedValues:
      - Charitable
      - Corporate
      - Gaming
      - Lotteries
      - Wagering
    ConstraintDescription: Must be Charitable | Corporate | Gaming | Lotteries | Wagering
    Default: Gaming

  Department:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: BrandName

  Application:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: SomePlatform

  Component:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: Test

Resources:
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Sid: EC2AssumeRole
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
      # Add additional Managed Policy ARNs in the list below if required
      ManagedPolicyArns:
      -
        Fn::ImportValue: !Sub ${IAMManagedPolicyEC2}-IAMPolicyARN
      #TODO - Import Reference to Managed Policies
      #- Fn::ImportValue: !Join [ "-", [ !Ref ManagedPolicyStackName, "IAMPolicyARN" ] ]
      #- Fn::ImportValue: !Join [ "-", [ !Ref RDSManagedPolicyStackName, "IAMPolicyARN" ] ]
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      - arn:aws:iam::aws:policy/AmazonElastiCacheFullAccess
      - arn:aws:iam::aws:policy/AutoScalingFullAccess #TODO Lock down via custom policy
      RoleName: !Sub ${BusinessUnit}-${Department}-${Application}-${Component}-Role
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref Role
      InstanceProfileName: !Sub ${BusinessUnit}-${Department}-${Application}-${Component}-InstanceProfile

Outputs:
  IAMRoleName:
    Value: !Ref Role
  IAMRoleARN:
    Value: !GetAtt [ "Role", "Arn" ]
  InstanceProfileName:
    Value: !Ref InstanceProfile
  InstanceProfileARN:
    Value: !GetAtt [ "InstanceProfile", "Arn" ]

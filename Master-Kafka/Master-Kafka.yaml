# Template created by hash
Description: Kafka Application Stack (incl. Security Groups, IAM Roles, and 3 EC2 instances)

# This Master Template creates the following resources:
#   EC2 Instance Security Group
#   EC2 IAM Role and Instance Profile
#   3 x EC2 Instance, one in each AZ

Parameters:

  #Cross-Stack Reference Parameter
  VPCStackName:
    Description: Stack Name that built the VPC
    Type: String
    Default: UAT-VPC

  IAMManagedPolicyEC2StackName:
    Description: Stack Name that built the IAM Managed Policy that is common to all EC2 instances
    Type: String
    Default: IAM-ManagedPolicy-EC2Instances

#  App1-phpStackName:
#    Description: Stack Name that built App1-php
#    Type: String
#    Default: UAT-App1-php
#
#  App2-phpStackName:
#    Description: Stack Name that built Data Consumer
#    Type: String
#    Default: UAT-App2-php
#
#  App3-javaStackName:
#    Description: Stack Name that built Data Ingestion
#    Type: String
#    Default: UAT-App3-java
#
#  App4-phpStackName:
#    Description: Stack Name that built App4-php
#    Type: String
#    Default: UAT-App4-php
#
#  App5-phpStackName:
#    Description: Stack Name that built POS Integration
#    Type: String
#    Default: UAT-App5-php
#
#  App6-phpStackName:
#    Description: Stack Name that built App6-php
#    Type: String
#    Default: UAT-App6-php
#
#  App7-phpStackName:
#    Description: Stack Name that built App7-php
#    Type: String
#    Default: UAT-App7-php

  #Build Configuration Parameters
  BuildBucket:
    Type: String
    Default: dchash2buildbucket

  SecurityGroupTemplateFile:
    Type: String
    Default: EC2-SecurityGroup-App-Kafka.yaml

  IAMRoleTemplateFile:
    Type: String
    Default: IAM-Role-Kafka.yaml

  EC2InstanceTemplateFile:
    Description: Provide to build 3 standalone EC2 instances for this application
    Type: String
    Default: EC2-Standalone-Kafka.yaml

  # Launch Configuration or EC2 Instance Parameters
  ImageId:
    Description: The Amazon Machine Image Id
    Type: String
    Default: ami-XXXXXXXX # SomeDCHash2BaseImage

  EC2KeyPair:
    Description: The EC2 Keypair to associated to the EC2 Instances (Leave blank for no key pair)
    Type: String # Note have to use an untyped parameter as AWS::EC2::KeyPair::KeyName is not optional
    Default: DCHash2-TestKey

  # Note:
  # Only includes current generation General Purpose, Memory and Compute Optimised instance types that allow for EBS Encryption.
  # Instance classes such as CR1, X1, F1, G2/3, and P2 have been removed.
  InstanceType:
    Description: The EC2 instance type to launch
    Type: String
    AllowedValues:
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c4.large
    - c4.xlarge
    - m4.10xlarge
    - m4.16xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.large
    - m4.xlarge
    - r4.16xlarge
    - r4.2xlarge
    - r4.4xlarge
    - r4.8xlarge
    - r4.large
    - r4.xlarge
    - t2.2xlarge
    - t2.large
    - t2.medium
    - t2.micro
    - t2.nano
    - t2.small
    - t2.xlarge
    Default: t2.micro

  # Tagging Parameters
  Environment:
    Description: Production or UAT or Test
    Type: String
    Default: UAT
    AllowedValues:
      - Production
      - UAT
      - Test

  BusinessUnit:
    Description: Some Group Business Unit
    Type: String
    Default: Gaming
    AllowedValues:
      - Charitable
      - Corporate
      - Gaming
      - Lotteries
      - Wagering
    ConstraintDescription: Must be Charitable | Corporate | Gaming | Lotteries | Wagering

  Department:
    Description: Department
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: BrandName

  Application:
    Description: Application
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: SomePlatform

  Component:
    Description: Specific Application
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: Kafka

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:

    - Label:
        default: CloudFormation Template Files and Location
      Parameters:
      - BuildBucket
      - IAMRoleTemplateFile
      - EC2InstanceTemplateFile
      - SecurityGroupTemplateFile
    - Label:
        default: Cross-Stack Reference Parameters
      Parameters:
      - VPCStackName
      - IAMManagedPolicyEC2StackName
#      - App1-phpStackName
#      - App2-phpStackName
#      - App3-javaStackName
#      - App4-phpStackName
#      - App5-phpStackName
#      - App6-phpStackName
#      - App7-phpStackName
    - Label:
        default: EC2 Instance Configuration
      Parameters:
      - ImageId
      - EC2KeyPair
      - InstanceType
    - Label:
        default: Tagging Parameters
      Parameters:
      - Environment
      - BusinessUnit
      - Department
      - Application
      - Component

Resources:

  # Kafka EC2 Instances Security Group
  SecurityGroup:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${SecurityGroupTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component
        VPCId:
          Fn::ImportValue: !Sub ${VPCStackName}-VPCID
#        App1-phpSecurityGroup:
#          Fn::ImportValue: !Sub ${App1-phpStackName}-SecurityGroup
#        App2-phpSecurityGroup:
#          Fn::ImportValue: !Sub ${App2-phpStackName}-SecurityGroup
#        App3-javaSecurityGroup:
#          Fn::ImportValue: !Sub ${App3-javaStackName}-SecurityGroup
#        App4-phpSecurityGroup:
#          Fn::ImportValue: !Sub ${App4-phpStackName}-SecurityGroup
#        App5-phpSecurityGroup:
#          Fn::ImportValue: !Sub ${App5-phpStackName}-SecurityGroup
#        App6-phpSecurityGroup:
#          Fn::ImportValue: !Sub ${App6-phpStackName}-SecurityGroup
#        App7-phpSecurityGroup:
#          Fn::ImportValue: !Sub ${App7-phpStackName}-SecurityGroup

  #Kafka IAM Role
  IAMRole:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${IAMRoleTemplateFile}
      Parameters:
        IAMManagedPolicyEC2:
          Fn::ImportValue: !Sub ${IAMManagedPolicyEC2StackName}-IAMPolicyARN
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component

  # Three Standalone EC2 instances, one in each AZ
  EC2InstanceA:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${EC2InstanceTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Sub ${Component}-A
        ImageId: !Ref ImageId
        InstanceProfile: !GetAtt [ IAMRole, Outputs.InstanceProfileName ]
        InstanceType: !Ref InstanceType
        KeyName: !Ref EC2KeyPair
        SecurityGroup: !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]
        SubnetId:
          Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetA

  EC2InstanceB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${EC2InstanceTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Sub ${Component}-B
        ImageId: !Ref ImageId
        InstanceProfile: !GetAtt [ IAMRole, Outputs.InstanceProfileName ]
        InstanceType: !Ref InstanceType
        KeyName: !Ref EC2KeyPair
        SecurityGroup: !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]
        SubnetId:
          Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetB

  EC2InstanceC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${EC2InstanceTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Sub ${Component}-C
        ImageId: !Ref ImageId
        InstanceProfile: !GetAtt [ IAMRole, Outputs.InstanceProfileName ]
        InstanceType: !Ref InstanceType
        KeyName: !Ref EC2KeyPair
        SecurityGroup: !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]
        SubnetId:
          Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetC

Outputs:
  SecurityGroup:
    Description: The Kafka Security Group
    Value:  !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]
    Export:
      Name: !Sub "${AWS::StackName}-SecurityGroup"

  InstanceProfileName:
    Value: !GetAtt [ IAMRole, Outputs.InstanceProfileName]
    Export:
      Name: !Sub "${AWS::StackName}-InstanceProfileName"
  InstanceProfileARN:
    Value: !GetAtt [ IAMRole, Outputs.InstanceProfileARN ]
    Export:
      Name: !Sub "${AWS::StackName}-InstanceProfileARN"

  InstanceA:
    Description: Instance ID for Instance AZ-A
    Value: !GetAtt [ EC2InstanceA, Outputs.Instance ]
    Export:
      Name: !Sub ${AWS::StackName}-InstanceA

  InstanceB:
    Description: Instance ID for Instance AZ-B
    Value: !GetAtt [ EC2InstanceB, Outputs.Instance ]
    Export:
      Name: !Sub ${AWS::StackName}-InstanceB

  InstanceC:
    Description: Instance ID for Instance AZ-C
    Value: !GetAtt [ EC2InstanceC, Outputs.Instance ]
    Export:
      Name: !Sub ${AWS::StackName}-InstanceC

# Template created by hash
Description: Creates a standalone EC2 instance with the basic requirements for DCHash 2 applications
Parameters:


  ImageId:
    Description: AMI Id of the latest Some RHEL image
    Type: String
    # Default selected on 170928
    Default: ami-XXXXXXXX

  InstanceProfile:
    Description: ARN of the Instance Profile
    Type: String
    Default: arn:aws:iam::XXXXXXXXXXXX:instance-profile/UAT-SuperPortal-LaunchConfiguration-Z8RFZJTXVYLL-InstanceProfile-XWLR4LH7HAB6

  InstanceType:
    Description: The EC2 instance type to launch
    Type: String
    AllowedValues:
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c4.large
    - c4.xlarge
    - m4.10xlarge
    - m4.16xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.large
    - m4.xlarge
    - r4.16xlarge
    - r4.2xlarge
    - r4.4xlarge
    - r4.8xlarge
    - r4.large
    - r4.xlarge
    - t2.2xlarge
    - t2.large
    - t2.medium
    - t2.micro
    - t2.nano
    - t2.small
    - t2.xlarge
    Default: t2.micro

  KeyName:
    Type: String

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id

  SubnetId:
    Type: AWS::EC2::Subnet::Id

  # Tagging Parameters
  Environment:
    Description: Production or UAT or Test
    Type: String
    Default: UAT
    AllowedValues:
      - Production
      - UAT
      - Test

  BusinessUnit:
    Description: Some Group Business Unit
    Type: String
    Default: Gaming
    AllowedValues:
      - Charitable
      - Corporate
      - Gaming
      - Lotteries
      - Wagering
    ConstraintDescription: Must be Charitable | Corporate | Gaming | Lotteries | Wagering

  Department:
    Description: Department
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: BrandName

  Application:
    Description: Application
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: SomePlatform

  Component:
    Description: Specific Application
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: Kafka

Resources:
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      IamInstanceProfile: !Ref InstanceProfile
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds:
      - !Ref SecurityGroup
      SubnetId: !Ref SubnetId
      Tags:
      - Key: Name
        Value:  !Sub ${Environment}-${Component}-App
      - Key: Environment
        Value: !Ref Environment
      - Key: BusinessUnit
        Value: !Ref BusinessUnit
      - Key: Application
        Value: !Ref Application
      - Key: Component
        Value: !Ref Component
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash
          rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
          rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm
          yum install httpd php70* -y --skip-broken
          yum remove -y php70w-mysqlnd
          yum install -y php70w-mysql
          curl -sS https://getcomposer.org/installer | HOME=/root php -- --install-dir=/bin
          mv /bin/composer.phar /bin/composer
          systemctl enable httpd
          systemctl start httpd
          systemctl enable php-fpm
          systemctl start php-fpm
          mkdir -p /var/www/SomePlatform-project/superportal
          chown -R apache:apache /var/www/SomePlatform-project
          iptables -A INPUT -p tcp --dport 80 -m state --state NEW -j ACCEPT
          iptables -A INPUT -p tcp --dport 443 -m state --state NEW -j ACCEPT
          iptables -A INPUT -p tcp --dport 2181 -m state --state NEW -j ACCEPT
          iptables -A INPUT -p tcp --dport 2888 -m state --state NEW -j ACCEPT
          iptables -A INPUT -p tcp --dport 3888 -m state --state NEW -j ACCEPT
          iptables -A INPUT -p tcp --dport 9092 -m state --state NEW -j ACCEPT
          service iptables save
          cat <<EOF > /var/www/html/phpinfo.php
          <?php
          // Show all information, defaults to INFO_ALL
          phpinfo();
          ?>
          EOF
          chown apache:apache /var/www/html/phpinfo.php
          yum install ruby -y
          yum install wget -y
          cd /home/ec2-user
          curl -O https://aws-codedeploy-ap-southeast-2.s3.amazonaws.com/latest/install
          chmod +x ./install
          ./install auto
          systemctl start codedeploy-agent

Outputs:
  Instance:
    Description: Instance ID
    Value: !Ref Instance
    Export:
      Name: !Sub ${AWS::StackName}-Instance

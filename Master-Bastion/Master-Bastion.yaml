# Template created by hash
Description: Bastion Application Stack (incl. Security Groups and IAM role)

# This Master Template creates the following resources:
#   Load Balancer Security Group
#   EC2 Instance Security Group
#   EC2 IAM Role and Instance Profile
#   Classic Load Balancer
#   3 x EC2 Instance, one in each AZ, OR an Auto-Scaling Group and Launch Configuration
#   CloudFront Distribution
#   Route 53 Record set to alias to the CloudFront distribution

Parameters:

  #Cross-Stack Reference Parameter
  VPCStackName:
    Description: Stack Name that built the VPC
    Type: String
    Default: UAT-VPC

  IAMManagedPolicyEC2StackName:
    Description: Stack Name that built the IAM Managed Policy that is common to all EC2 instances
    Type: String
    Default: IAM-ManagedPolicy-EC2Instances

  RDSStackName:
    Description: Stack Name that created RDS
    Type: String
    Default: UAT-RDS-MySQL

  KafkaStackName:
    Description: Stack Name that created Kafka App
    Type: String
    Default: UAT-Kafka

  AmplifyStackName:
    Description: Stack Name that created Amplify App
    Type: String
    Default: UAT-Amplify

  DataConsumerStackName:
    Description: Stack Name that created DataConsumer App
    Type: String
    Default: UAT-DataConsumer

  DataIngestionStackName:
    Description: Stack Name that created DataIngestion App
    Type: String
    Default: UAT-DataIngestion

  KNOXStackName:
    Description: Stack Name that created KNOX App
    Type: String
    Default: UAT-KNOX

  POSIntegrationStackName:
    Description: Stack Name that created POSIntegration App
    Type: String
    Default: UAT-POSIntegration

  SoldiStackName:
    Description: Stack Name that created Soldi App
    Type: String
    Default: UAT-Soldi

  SuperPortalStackName:
    Description: Stack Name that created SuperPortal App
    Type: String
    Default: UAT-SuperPortal

  #Build Configuration Parameters
  BuildBucket:
    Type: String
    Default: dchash2buildbucket

  SecurityGroupTemplateFile:
    Type: String
    Default: EC2-SecurityGroup-App-Bastion.yaml

  IAMRoleTemplateFile:
    Type: String
    Default: IAM-Role-Bastion.yaml

  EC2InstanceTemplateFile:
    Description: Provide to build 3 standalone EC2 instances for this application
    Type: String
    Default: EC2-Standalone-Bastion.yaml

  # EC2 Instance Parameters
  ImageId:
    Description: The Amazon Machine Image Id
    Type: String
    Default: ami-XXXXX # BastionHost ami

  EC2KeyPair:
    Description: The EC2 Keypair to associated to the EC2 Instances (Leave blank for no key pair)
    Type: String # Note have to use an untyped parameter as AWS::EC2::KeyPair::KeyName is not optional
    Default: DCHash2-TestKey

  # Note:
  # Only includes current generation General Purpose, Memory and Compute Optimised instance types that allow for EBS Encryption.
  # Instance classes such as CR1, X1, F1, G2/3, and P2 have been removed.
  InstanceType:
    Description: The EC2 instance type to launch
    Type: String
    AllowedValues:
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c4.large
    - c4.xlarge
    - m4.10xlarge
    - m4.16xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.large
    - m4.xlarge
    - r4.16xlarge
    - r4.2xlarge
    - r4.4xlarge
    - r4.8xlarge
    - r4.large
    - r4.xlarge
    - t2.2xlarge
    - t2.large
    - t2.medium
    - t2.micro
    - t2.nano
    - t2.small
    - t2.xlarge
    Default: t2.micro

  # Tagging Parameters
  Environment:
    Description: Production or UAT or Test
    Type: String
    Default: UAT
    AllowedValues:
      - Production
      - UAT
      - Test

  BusinessUnit:
    Description: Some Group Business Unit
    Type: String
    Default: Gaming
    AllowedValues:
      - Charitable
      - Corporate
      - Gaming
      - Lotteries
      - Wagering
    ConstraintDescription: Must be Charitable | Corporate | Gaming | Lotteries | Wagering

  Department:
    Description: Department
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: BrandName

  Application:
    Description: Application
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: SomePlatform

  Component:
    Description: Specific Application
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: Bastion

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:

    - Label:
        default: CloudFormation Template Files and Location
      Parameters:
      - BuildBucket
      - IAMRoleTemplateFile
      - EC2InstanceTemplateFile
      - SecurityGroupTemplateFile
    - Label:
        default: Cross-Stack Reference Parameters
      Parameters:
      - VPCStackName
      - IAMManagedPolicyEC2StackName
      - RDSStackName
      - KafkaStackName
      - AmplifyStackName
      - DataConsumerStackName
      - DataIngestionStackName
      - KNOXStackName
      - POSIntegrationStackName
      - SoldiStackName
      - SuperPortalStackName
    - Label:
        default: EC2 Instance Configuration
      Parameters:
      - ImageId
      - EC2KeyPair
      - InstanceType
    - Label:
        default: Tagging Parameters
      Parameters:
      - Environment
      - BusinessUnit
      - Department
      - Application
      - Component

Resources:

  # Bastion EC2 Instances Security Group
  SecurityGroup:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${SecurityGroupTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component
        VPCId:
          Fn::ImportValue: !Sub ${VPCStackName}-VPCID
        RDSSecurityGroup:
          Fn::ImportValue: !Sub ${RDSStackName}-SecurityGroup
        KafkaSecurityGroup:
          Fn::ImportValue: !Sub ${KafkaStackName}-SecurityGroup
        AmplifySecurityGroup:
          Fn::ImportValue: !Sub ${AmplifyStackName}-SecurityGroup
        DataConsumerSecurityGroup:
          Fn::ImportValue: !Sub ${DataConsumerStackName}-SecurityGroup
        DataIngestionSecurityGroup:
          Fn::ImportValue: !Sub ${DataIngestionStackName}-SecurityGroup
        KNOXSecurityGroup:
          Fn::ImportValue: !Sub ${KNOXStackName}-SecurityGroup
        POSIntegrationSecurityGroup:
          Fn::ImportValue: !Sub ${POSIntegrationStackName}-SecurityGroup
        SoldiSecurityGroup:
          Fn::ImportValue: !Sub ${SoldiStackName}-SecurityGroup
        SuperPortalSecurityGroup:
          Fn::ImportValue: !Sub ${SuperPortalStackName}-SecurityGroup
        SomeOffice1: 20X.1X.XXX.1/32
        SomeOffice2: 20X.X4.XXX.1/32
        SomeOffice3: XXX.XX.2X.XX/32
        HassanSydney: X9.XX5.XXX.XXX/32
        HassanPakistan1: XX2.X76.X3X.XX8/32
        HassanPakistan2: XX2.X76.X7X.XX1/32

  #Bastion IAM Role
  IAMRole:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${IAMRoleTemplateFile}
      Parameters:
        IAMManagedPolicyEC2:
          Fn::ImportValue: !Sub ${IAMManagedPolicyEC2StackName}-IAMPolicyARN
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component

  EC2InstanceA:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${EC2InstanceTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component
        ImageId: !Ref ImageId
        InstanceProfile: !GetAtt [ IAMRole, Outputs.InstanceProfileName ]
        InstanceType: !Ref InstanceType
        KeyName: !Ref EC2KeyPair
        SecurityGroup: !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]
        SubnetId:
          Fn::ImportValue: !Sub ${VPCStackName}-PublicSubnetA
        AvailabilityZone: A

#  EC2InstanceB:
#    Type: AWS::CloudFormation::Stack
#    Condition: IsNotASG
#    Properties:
#      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${EC2InstanceTemplateFile}
#      Parameters:
#        Environment: !Ref Environment
#        BusinessUnit: !Ref BusinessUnit
#        Department: !Ref Department
#        Application: !Ref Application
#        Component: !Sub ${Component}-B
#        ImageId: !Ref ImageId
#        InstanceProfile: !GetAtt [ IAMRole, Outputs.InstanceProfileName ]
#        InstanceType: !Ref InstanceType
#        KeyName: !Ref EC2KeyPair
#        SecurityGroup: !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]
#        SubnetId:
#          Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetB
#
#  EC2InstanceC:
#    Type: AWS::CloudFormation::Stack
#    Condition: IsNotASG
#    Properties:
#      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${EC2InstanceTemplateFile}
#      Parameters:
#        Environment: !Ref Environment
#        BusinessUnit: !Ref BusinessUnit
#        Department: !Ref Department
#        Application: !Ref Application
#        Component: !Sub ${Component}-C
#        ImageId: !Ref ImageId
#        InstanceProfile: !GetAtt [ IAMRole, Outputs.InstanceProfileName ]
#        InstanceType: !Ref InstanceType
#        KeyName: !Ref EC2KeyPair
#        SecurityGroup: !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]
#        SubnetId:
#          Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetC

Outputs:
  SecurityGroup:
    Description: The Bastion Security Group
    Value:  !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]
    Export:
      Name: !Sub "${AWS::StackName}-SecurityGroup"

  InstanceProfileName:
    Value: !GetAtt [ IAMRole, Outputs.InstanceProfileName]
    Export:
      Name: !Sub "${AWS::StackName}-InstanceProfileName"

  InstanceProfileARN:
    Value: !GetAtt [ IAMRole, Outputs.InstanceProfileARN ]
    Export:
      Name: !Sub "${AWS::StackName}-InstanceProfileARN"

  ElasticIPA:
    Value: !GetAtt [ EC2InstanceA, Outputs.ElasticIP ]
    Export:
      Name: !Sub "${AWS::StackName}-ElasticIPA"

# Template created by hash
Description: IAM Role for DCHash2 App5-php Application
Parameters:

  # Add additional ManagedPolicy parameters if more than one policy will be attached
  IAMManagedPolicyEC2:
    Type: String

  # Tagging Parameters
  Environment:
    Type: String
    AllowedValues:
      - Production
      - UAT
      - Test

  BusinessUnit:
    Type: String
    AllowedValues:
      - Charitable
      - Corporate
      - Gaming
      - Lotteries
      - Wagering
    ConstraintDescription: Must be Charitable | Corporate | Gaming | Lotteries | Wagering

  Department:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: BrandName

  Application:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: SomePlatform

  Component:
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: App5-php

Resources:
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Sid: EC2AssumeRole
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
      # Add additional Managed Policy ARNs in the list below if required
      ManagedPolicyArns:
      - !Ref IAMManagedPolicyEC2
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      - arn:aws:iam::aws:policy/AutoScalingFullAccess
      - arn:aws:iam::aws:policy/AmazonElastiCacheFullAccess
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy
      - arn:aws:iam::aws:policy/AmazonESFullAccess
      RoleName: !Sub ${Environment}-${Component}-${Application}-Role

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref Role

Outputs:
  IAMRoleName:
    Value: !Ref Role
  IAMRoleARN:
    Value: !GetAtt [ "Role", "Arn" ]
  InstanceProfileName:
    Value: !Ref InstanceProfile
  InstanceProfileARN:
    Value: !GetAtt [ "InstanceProfile", "Arn" ]

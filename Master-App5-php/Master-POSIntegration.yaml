# Template created by hash
Description: App5-php Application Stack (incl. Classic Load Balancer, Security Groups, Auto Scaling Group and Launch Configuration)

# This Master Template creates the following resources:
#   Load Balancer Security Group
#   EC2 Instance Security Group
#   EC2 IAM Role and Instance Profile
#   Classic Load Balancer
#   3 x EC2 Instance, one in each AZ, OR an Auto-Scaling Group and Launch Configuration
#   CloudFront Distribution
#   Route 53 Record set to alias to the CloudFront distribution

Parameters:

  #Cross-Stack Reference Parameter
  VPCStackName:
    Description: Stack Name that built the VPC
    Type: String
    Default: UAT-VPC

  IAMManagedPolicyEC2StackName:
    Description: Stack Name that built the IAM Managed Policy that is common to all EC2 instances
    Type: String
    Default: IAM-ManagedPolicy-EC2Instances

  DomainStackName:
    Description: Stack Name that created the external DNS Zone in Route 53
    Type: String
    Default: UAT-Route53

  ElastiCacheStackName:
    Description: Stack Name that create ElastiCache
    Type: String
    Default: UAT-ElastiCache-Redis

  RDSStackName:
    Description: Stack Name that created RDS
    Type: String
    Default: UAT-RDS-MySQL

  KafkaStackName:
    Description: Stack Name that created Kafka App
    Type: String
    Default: UAT-Kafka

  WAFStackName:
    Description: Stack Name that created the WAF ACL
    Type: String
    Default: UAT-WAF

  #Build Configuration Parameters
  BuildBucket:
    Type: String
    Default: dchash2buildbucket

  SecurityGroupTemplateFile:
    Type: String
    Default: EC2-SecurityGroup-App-App5-php.yaml

  IAMRoleTemplateFile:
    Type: String
    Default: IAM-Role-App5-php.yaml

  EC2InstanceTemplateFile:
    Description: Provide to build 3 standalone EC2 instances for this application
    Type: String
    Default: EC2-Standalone-DCHash2.yaml

  LaunchConfigurationTemplateFile:
    Description: Provide to build an Auto-Scaling Group for this application
    Type: String
    Default: EC2-LaunchConfiguration-App5-php.yaml

  AutoScalingTemplateFile:
    Description: Provide to build an Auto-Scaling Group for this application
    Type: String
    Default: EC2-AutoScalingGroup.yaml

  ElasticLoadBalancerTemplateFile:
    Type: String
    Default: EC2-ELB-Classic.yaml

  ElasticLoadBalancerSGTemplateFile:
    Type: String
    Default: EC2-SecurityGroup-LoadBalancer-Public.yaml

  CloudFrontTemplateFile:
    Type: String
    Default: CloudFront-Distribution.yaml

  Route53RecordSetTemplateFile:
    Type: String
    Default: Route53-RecordSet.yaml

  # Classic Load Balancer Parameters

  HostName:
    Default: uatpi
    Type: String
    Description: Record Name for the new Resource Record in the Hosted Zone for the ELB or CloudFront distribution

  ConnectionDrainingTimeout:
    Default: '0'
    MinValue: '0'
    Type: Number
    Description: Set the timeout value for Elastic Load Balancer draining policy if required
    MaxValue: '3600'

  InstancePort:
    Default: '80'
    Type: Number
    Description: Specifies the TCP port on which the instance server is listening

  Scheme:
    Default: internet-facing
    Type: String
    Description: Specifies whether to create an internal ELB or a public facing one
    AllowedValues:
    - internet-facing
    - internal

  InstanceProtocol:
    Default: HTTP
    Type: String
    Description: Specifies the protocol to use for routing traffic to back-end instances HTTP / HTTPS / TCP / SSL
    AllowedValues:
    - HTTP
    - HTTPS
    - TCP
    - SSL

  HealthTimeout:
    Default: '5'
    Type: Number
    Description: Number of seconds during which no response means a failed health probe.

  2ndLoadBalancerProtocol:
    Default: HTTP
    Type: String
    Description: Specifies the 2nd protocol to use for the Load Balancer HTTP / HTTPS / TCP / SSL.
    AllowedValues:
    - HTTP
    - HTTPS
    - TCP
    - SSL

  AppCookieName:
    Default: ''
    Type: String
    Description: Generates a stickiness policy based upon an application cookie. Leave blank not to use. Overrides CookieExpirationPeriod.

  HealthInterval:
    Default: '30'
    Type: Number
    Description: Seconds between health checks.

  HealthTarget:
    Default: HTTP:80/phpinfo.php
    Type: String
    Description: Protocol & port check on instance. TCP:5000 | SSL:5000 || HTTP(S) = HTTP:80/path/to/my/file.

  UnhealthyThreshold:
    Default: '3'
    Type: Number
    Description: Consecutive failed checks before marking instance unhealthy.

  HealthyThreshold:
    Default: '2'
    Type: Number
    Description: Consecutive successful checks before marking instance healthy.

  SSLCertArn:
    Default: 'arn:aws:acm:ap-southeast-2:XXXXXXXXXXXX:certificate/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX'
    ConstraintDescription: Must be an existing SSL Name.
    Type: String
    Description: SSL Certificate Name. Full ARN required.

  CrossZone:
    Default: 'true'
    Type: String
    Description: Whether cross-zone load balancing is enabled for the load balancer.
    AllowedValues:
    - 'true'
    - 'false'

  CookieExpirationPeriod:
    Default: ''
    Type: String
    Description: Generates a stickiness policy with sticky session lifetimes controlled by a specified expiration period. Leave blank not to use.

  2ndInstancePort:
    Default: '80'
    Type: Number
    Description: Specifies the 2nd TCP port on which the instance server is listening.

  LoadBalancerPort:
    Default: '443'
    Type: Number
    Description: Specifies the external load balancer port number.

  LogBucketName:
    Default: DCHash2-uat-accesslogs
    ConstraintDescription: The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-).
    Type: String
    Description: The name of the bucket to use for ELB logs. Must be unique.

  TimeOut:
    Default: 0
    Type: Number
    Description: The time (in seconds) that a connection to the load balancer can remain idle, which means no data is sent over the connection. After the specified time, the load balancer closes the connection.
    MinValue: 0
    MaxValue: 3600

  2ndLoadBalancerPort:
    Default: '80'
    Type: String
    Description: Specifies the 2nd external load balancer port number.

  2ndInstanceProtocol:
    Default: HTTP
    Type: String
    Description: Specifies the 2nd protocol to use for routing traffic to back-end instances HTTP / HTTPS / TCP / SSL.
    AllowedValues:
    - HTTP
    - HTTPS
    - TCP
    - SSL

  SecondaryListener:
    Default: true
    Type: String
    Description: Enable Secondary Listener on the Load Balancer
    AllowedValues:
    - true
    - false

  LoadBalancerProtocol:
    Default: HTTPS
    Type: String
    Description: Specifies the protocol to use for the Load Balancer HTTP / HTTPS / TCP / SSL.
    AllowedValues:
    - HTTP
    - HTTPS
    - TCP
    - SSL

  ASGTargets:
    Default: true
    Type: String
    Description: Are the targets part of an Auto-Scaling Group
    AllowedValues:
    - true
    - false

  # Launch Configuration Parameters
  ImageId:
    Description: The Amazon Machine Image Id
    Type: String
    Default: ami-XXXXXXXX # SomeDCHash2BaseImage

  EC2KeyPair:
    Description: The EC2 Keypair to associated to the EC2 Instances (Leave blank for no key pair)
    Type: String # Note have to use an untyped parameter as AWS::EC2::KeyPair::KeyName is not optional
    Default: DCHash2-TestKey

  # Note:
  # Only includes current generation General Purpose, Memory and Compute Optimised instance types that allow for EBS Encryption.
  # Instance classes such as CR1, X1, F1, G2/3, and P2 have been removed.
  InstanceType:
    Description: The EC2 instance type to launch
    Type: String
    AllowedValues:
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c4.large
    - c4.xlarge
    - m4.10xlarge
    - m4.16xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.large
    - m4.xlarge
    - r4.16xlarge
    - r4.2xlarge
    - r4.4xlarge
    - r4.8xlarge
    - r4.large
    - r4.xlarge
    - t2.2xlarge
    - t2.large
    - t2.medium
    - t2.micro
    - t2.nano
    - t2.small
    - t2.xlarge
    Default: t2.micro

  # Auto-Scaling Parameters
    # NOTE Sept 2017:
    # As LifeCycle Hooks are defined after auto scaling groups there is a race condition and the first batch of auto scaling instances
    # will not always apply the lifecycle hook and stop in the Wait:pending state
    # See: https://forums.aws.amazon.com/message.jspa?messageID=701967
  MinSize:
    Type: Number
    Default: 0
    MaxValue: 9
    ConstraintDescription: The largest minimum value allowed is 9
    Description: Use 0 on creation as there is a race condition where the first batch of ASG instances won't have a lifecycle hook defined so will fail. Update after creation.

  MaxSize:
    Type: Number
    Default: 3
    MaxValue: 24
    ConstraintDescription: The largest maximum value allowed is 24
    Description: Maximum number of instances in the Auto-Scaling Group

  DesiredCapacity:
    Type: Number
    Default: 0
    Description: Use 0 on creation as there is a race condition where the first batch of ASG instances won't have a lifecycle hook defined so will fail. Update after creation.

  # ASG Update Policy Settings
  UpdateMin:
    Description: Minimum number of instance to be kept online during a rolling update
    Type: Number
    Default: 0

  UpdateMaxBatchSize:
    Description: Maximum number of instances to be upgraded at one time during a rolling update
    Type: Number
    Default: 1

  PauseTime:
    Description: Amount of time to wait between each update. Must be in ISO8601 duration format (#H#M#S, where each '#' is the number of hours, minutes, and seconds, respectively). The maximum PauseTime is one hour (1H)
    Type: String
    Default: 5M
    MinLength: 2
    MaxLength: 12
    ConstraintDescription: Must be between 2 and 12 characters in length

  #The length of time in seconds after a new EC2 instance comes into service that Auto Scaling starts checking its health.
  #This is specific to each application
  HealthCheckGracePeriod:
    Description: The length of time in seconds after a new EC2 instance comes into service that Auto Scaling starts checking its health
    Type: Number
    Default: 60

  # CloudFront Parameters
  PriceClass:
    Default: PriceClass_All
    Description: Price class for CF distribution. See http://aws.amazon.com/cloudfront/pricing for more information
    Type: String
    AllowedValues:
    - PriceClass_All
    - PriceClass_200
    - PriceClass_100

  CloudFrontTTL:
    Description: TTL for cached objects in CloudFront (in seconds)
    Type: Number
    Default: 0
    MinValue: 0
    MaxValue: 31536000

  # Tagging Parameters
  Environment:
    Description: Production or UAT or Test
    Type: String
    Default: UAT
    AllowedValues:
      - Production
      - UAT
      - Test

  BusinessUnit:
    Description: Some Group Business Unit
    Type: String
    Default: Gaming
    AllowedValues:
      - Charitable
      - Corporate
      - Gaming
      - Lotteries
      - Wagering
    ConstraintDescription: Must be Charitable | Corporate | Gaming | Lotteries | Wagering

  Department:
    Description: Department
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: BrandName

  Application:
    Description: Application
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: SomePlatform

  Component:
    Description: Specific Application
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: App5-php

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:

    - Label:
        default: CloudFormation Template Files and Location
      Parameters:
      - BuildBucket
      - AutoScalingTemplateFile
      - IAMRoleTemplateFile
      - EC2InstanceTemplateFile
      - LaunchConfigurationTemplateFile
      - SecurityGroupTemplateFile
      - ElasticLoadBalancerTemplateFile
      - ElasticLoadBalancerSGTemplateFile
      - CloudFrontTemplateFile
      - Route53RecordSetTemplateFile
    - Label:
        default: Cross-Stack Reference Parameters
      Parameters:
      - VPCStackName
      - IAMManagedPolicyEC2StackName
      - DomainStackName
      - ElastiCacheStackName
      - RDSStackName
      - KafkaStackName
      - WAFStackName
    - Label:
        default: Auto-Scaling Parameters. Leave blank if not creating an ASG
      Parameters:
      - MinSize
      - MaxSize
      - DesiredCapacity
      - HealthCheckGracePeriod
      - UpdateMin
      - UpdateMaxBatchSize
      - PauseTime
    - Label:
        default: EC2 Instance Configuration
      Parameters:
      - ImageId
      - EC2KeyPair
      - InstanceType
    - Label:
        default: Load Balancer General Configuration
      Parameters:
      - ASGTargets
      - HostName
      - Scheme
      - CrossZone
      - TimeOut
      - SSLCertArn
    - Label:
        default: Listener 1 Configuration
      Parameters:
      - InstancePort
      - InstanceProtocol
      - LoadBalancerPort
      - LoadBalancerProtocol
    - Label:
        default: Listener 2 Configuration
      Parameters:
      - 2ndLoadBalancerProtocol
      - 2ndInstancePort
      - 2ndLoadBalancerPort
      - 2ndInstanceProtocol
      - SecondaryListener
    - Label:
        default: Target Health Monitoring Configuration
      Parameters:
      - ConnectionDrainingTimeout
      - HealthTimeout
      - HealthInterval
      - HealthTarget
      - UnhealthyThreshold
      - HealthyThreshold
    - Label:
        default: ELB S3 Logging Configuration
      Parameters:
      - LogBucketName
    - Label:
        default: Load Balancer Sticky Session configuration
      Parameters:
      - AppCookieName
      - CookieExpirationPeriod
    - Label:
        default: CloudFront Parameters
      Parameters:
      - CloudFrontTTL
      - PriceClass
    - Label:
        default: Tagging Parameters
      Parameters:
      - Environment
      - BusinessUnit
      - Department
      - Application
      - Component

Conditions:
  IsASG: !Equals [ !Ref ASGTargets, "true" ]
  IsNotASG: !Equals [ !Ref ASGTargets, "false" ]

Resources:

  # Elastic Load Balancer Security Group
  SecurityGroupELB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${ElasticLoadBalancerSGTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component
        VPCId:
          Fn::ImportValue: !Sub ${VPCStackName}-VPCID
        NATGatewayAzA:
          Fn::ImportValue: !Sub ${VPCStackName}-NATEIPA
        NATGatewayAzB:
          Fn::ImportValue: !Sub ${VPCStackName}-NATEIPB
        NATGatewayAzC:
          Fn::ImportValue: !Sub ${VPCStackName}-NATEIPC
        SomeOffice1: 20X.1X.XXX.1/32
        SomeOffice2: 20X.X4.XXX.1/32
        HassanSydney: X9.XX5.XXX.XXX/32
        HassanPakistan1: XX2.X76.X3X.XX8/32
        HassanPakistan2: XX2.X76.X7X.XX1/32

  # App5-php Classic ELB
  ElasticLoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${ElasticLoadBalancerTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component
        Subnets:
          Fn::Join:
          - ","
          - - Fn::ImportValue: !Sub ${VPCStackName}-PublicSubnetA
            - Fn::ImportValue: !Sub ${VPCStackName}-PublicSubnetB
            - Fn::ImportValue: !Sub ${VPCStackName}-PublicSubnetC
        LoadBalancerPort: !Ref LoadBalancerPort
        LoadBalancerProtocol: !Ref LoadBalancerProtocol
        SecurityGroups: !GetAtt [ SecurityGroupELB, Outputs.SecurityGroup ]
        ConnectionDrainingTimeout: !Ref ConnectionDrainingTimeout
        InstancePort: !Ref InstancePort
        Scheme: !Ref Scheme
        InstanceProtocol: !Ref InstanceProtocol
        HealthTimeout: !Ref HealthTimeout
        HealthInterval: !Ref HealthInterval
        HealthTarget: !Ref HealthTarget
        HealthyThreshold: !Ref HealthyThreshold
        UnhealthyThreshold: !Ref UnhealthyThreshold
        2ndLoadBalancerProtocol: !Ref 2ndLoadBalancerProtocol
        2ndLoadBalancerPort: !Ref 2ndLoadBalancerPort
        2ndInstanceProtocol: !Ref 2ndInstanceProtocol
        2ndInstancePort: !Ref 2ndInstancePort
        AppCookieName: !Ref AppCookieName
        SSLCertArn: !Ref SSLCertArn
        CrossZone: !Ref CrossZone
        CookieExpirationPeriod: !Ref CookieExpirationPeriod
        TimeOut: !Ref TimeOut
        SecondaryListener: !Ref SecondaryListener
        # Using "Fn::GetAtt" forces CloudFormation to create the EC2Instances resource first
        Instances:
          Fn::If:
          - IsNotASG
          -
            Fn::Join:
            - ","
            - - !GetAtt [ EC2InstanceA, Outputs.Instance ]
              - !GetAtt [ EC2InstanceB, Outputs.Instance ]
              - !GetAtt [ EC2InstanceC, Outputs.Instance ]
          -
            ''
        ASGTargets: !Ref ASGTargets
        CreateLoggingBucket: false
        S3BucketPrefix: !Ref Component
        LogBucketName: !Ref LogBucketName

  # App5-php EC2 Instances Security Group
  SecurityGroup:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${SecurityGroupTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component
        VPCId:
          Fn::ImportValue: !Sub ${VPCStackName}-VPCID
        ELBSecurityGroup: !GetAtt [ SecurityGroupELB, Outputs.SecurityGroup ]
        ElastiCacheSecurityGroup:
           Fn::ImportValue: !Sub ${ElastiCacheStackName}-SecurityGroup
        RDSSecurityGroup:
           Fn::ImportValue: !Sub ${RDSStackName}-SecurityGroup
        KafkaSecurityGroup:
           Fn::ImportValue: !Sub ${KafkaStackName}-SecurityGroup

  #App5-php IAM Role
  IAMRole:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${IAMRoleTemplateFile}
      Parameters:
        IAMManagedPolicyEC2:
          Fn::ImportValue: !Sub ${IAMManagedPolicyEC2StackName}-IAMPolicyARN
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component

## ToDo - Write EC2 Instances template to create 3 instances, one in each AZ
  EC2InstanceA:
    Type: AWS::CloudFormation::Stack
    Condition: IsNotASG
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${EC2InstanceTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Sub ${Component}-A
        ImageId: !Ref ImageId
        InstanceProfile: !GetAtt [ IAMRole, Outputs.InstanceProfileName ]
        InstanceType: !Ref InstanceType
        KeyName: !Ref EC2KeyPair
        SecurityGroup: !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]
        SubnetId:
          Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetA

  EC2InstanceB:
    Type: AWS::CloudFormation::Stack
    Condition: IsNotASG
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${EC2InstanceTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Sub ${Component}-B
        ImageId: !Ref ImageId
        InstanceProfile: !GetAtt [ IAMRole, Outputs.InstanceProfileName ]
        InstanceType: !Ref InstanceType
        KeyName: !Ref EC2KeyPair
        SecurityGroup: !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]
        SubnetId:
          Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetB

  EC2InstanceC:
    Type: AWS::CloudFormation::Stack
    Condition: IsNotASG
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${EC2InstanceTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Sub ${Component}-C
        ImageId: !Ref ImageId
        InstanceProfile: !GetAtt [ IAMRole, Outputs.InstanceProfileName ]
        InstanceType: !Ref InstanceType
        KeyName: !Ref EC2KeyPair
        SecurityGroup: !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]
        SubnetId:
          Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetC

  #App5-php Application Launch Configuration
  LaunchConfiguration:
    Type: AWS::CloudFormation::Stack
    Condition: IsASG
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${LaunchConfigurationTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component
        ImageId: !Ref ImageId
        InstanceProfile: !GetAtt [ IAMRole, Outputs.InstanceProfileARN ]
        ApplicationSecurityGroup: !GetAtt [SecurityGroup, Outputs.SecurityGroup]
        EC2KeyPair: !Ref EC2KeyPair
        InstanceType: !Ref InstanceType

  #App5-php Application AutoScaling Group
  AutoScalingGroup:
    Type: AWS::CloudFormation::Stack
    Condition: IsASG
    DependsOn:
    - LaunchConfiguration
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${AutoScalingTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component
        LaunchConfiguration: !GetAtt [LaunchConfiguration, Outputs.LaunchConfiguration]
        LoadBalancerName: !GetAtt [ ElasticLoadBalancer, Outputs.ELBv1]
        DesiredCapacity: !Ref DesiredCapacity
        MinSize: !Ref MinSize
        MaxSize: !Ref MaxSize
        VPCSubnetList:
          Fn::Join:
          - ","
          - - Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetA
            - Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetB
            - Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetC
        HealthCheckGracePeriod: !Ref HealthCheckGracePeriod
        PauseTime: !Ref PauseTime
        UpdateMin: !Ref UpdateMin
        UpdateMaxBatchSize: !Ref UpdateMaxBatchSize

  # Create CloudFront Distribution
  Distribution:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${CloudFrontTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component
        VPCId:
          Fn::ImportValue: !Sub ${VPCStackName}-VPCID
        PriceClass: !Ref PriceClass
        CloudFrontTTL: !Ref CloudFrontTTL
        ELBDNSName: !GetAtt [ ElasticLoadBalancer, Outputs.ELBDNSName ]
        OriginId: !Sub ${Environment}-${Component}
# Waiting on ownership of uat.ClientPlatformName.com.au
#        SSLCertArn: !Ref SSLCertArn
        SSLCertArn: ''
        WebACLId:
          Fn::ImportValue: !Sub ${WAFStackName}-WebACLId
        HostName: !Ref HostName
        DomainName:
          Fn::ImportValue: !Sub ${DomainStackName}-Public-DomainName

  Route53RecordSet:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${Route53RecordSetTemplateFile}
      Parameters:
        AliasTarget: !GetAtt [ Distribution, Outputs.CloudFrontDNSName ]
        # HostedZoneId for every CloudFront distribution is GETitFROMtemplateOUTPUTfromCFDfile
        AliasHostedZoneId: GETitFROMtemplateOUTPUTfromCFDfile
        HostedZoneName:
          Fn::ImportValue: !Sub ${DomainStackName}-Public-DomainName
        RecordType: A
        HostName: !Ref HostName
        DomainName:
          Fn::ImportValue: !Sub ${DomainStackName}-Public-DomainName
        TTL: ''
        DestinationAddress: ''

Outputs:
  SecurityGroup:
    Description: The App5-php Security Group
    Value:  !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]
    Export:
      Name: !Sub "${AWS::StackName}-SecurityGroup"

  ELBDNSName:
    Description: App5-php ELB DNS Name
    Value: !GetAtt [ ElasticLoadBalancer, Outputs.ELBDNSName ]
    Export:
      Name: !Sub "${AWS::StackName}-ELBDNSName"

  CloudFrontDistribution:
    Description: App5-php CloudFront Distribution
    Value: !GetAtt [ Distribution, Outputs.Distribution ]
    Export:
      Name: !Sub "${AWS::StackName}-CloudFrontDistribution"

  CloudFrontDNSName:
    Description: App5-php CloudFront DNS
    Value: !GetAtt [ Distribution, Outputs.CloudFrontDNSName ]
    Export:
      Name: !Sub "${AWS::StackName}-CloudFrontDNSName"

  InstanceProfileName:
    Value: !GetAtt [ IAMRole, Outputs.InstanceProfileName]
    Export:
      Name: !Sub "${AWS::StackName}-InstanceProfileName"
  InstanceProfileARN:
    Value: !GetAtt [ IAMRole, Outputs.InstanceProfileARN ]
    Export:
      Name: !Sub "${AWS::StackName}-InstanceProfileARN"

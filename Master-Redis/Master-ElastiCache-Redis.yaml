# Template created by hash
Description: Builds an ElastiCache Redis Cluster, Security Group, and Route53 CNAME

Parameters:

  # Cross-Stack References Parameters
  VPCStackName:
    Description: Stack Name that built the VPC
    Type: String
    Default: UAT-VPC

  DomainStackName:
    Description: Stack name that buit the Route 53 Private Hosted Zone
    Type: String
    Default: UAT-Route53

#  AmplifyStackName:
#    Description: Stack Name that built Amplify
#    Type: String
#    Default: UAT-Amplify
#
#  DataConsumerStackName:
#    Description: Stack Name that built Data Consumer
#    Type: String
#    Default: UAT-DataConsumer
#
#  DataIngestionStackName:
#    Description: Stack Name that built Data Ingestion
#    Type: String
#    Default: UAT-DataIngestion
#
#  KnoxStackName:
#    Description: Stack Name that built KNOX
#    Type: String
#    Default: UAT-KNOX
#
#  PosIntegrationStackName:
#    Description: Stack Name that built POS Integration
#    Type: String
#    Default: UAT-POSIntegration
#
#  SoldiStackName:
#    Description: Stack Name that built Soldi
#    Type: String
#    Default: UAT-Soldi
#
#  SuperPortalStackName:
#    Description: Stack Name that built SuperPortal
#    Type: String
#    Default: UAT-SuperPortal

  #Build Parameters
  BuildBucket:
    Type: String
    Default: dchash2buildbucket

  RedisSecurityGroupTemplateFile:
    Type: String
    Default: EC2-SecurityGroup-ElastiCacheRedis.yaml

  ElastiCacheRedisTemplateFile:
    Type: String
    Default: ElastiCache-Redis.yaml

  Route53RecordSetTemplateFile:
    Type: String
    Default: Route53-RecordSet.yaml

  # ElastiCache Redis Parameters

  HostName:
    Description: CNAME value for DNS
    Type: String
    Default: DCHash2redis


# To enable multi-AZ failover, cachenodetype cannot be t1 or t2 node types
# Redis backup and restore is not supported for T2 instances
  CacheNodeType:
    Description: "The size of the nodes in the cache cluster. Note: Auto-failover and Backup and Restore not supported on T2 instances"
    Type: String
    AllowedValues:
    - cache.t2.micro
    - cache.t2.small
    - cache.t2.medium
    - cache.m4.large
    - cache.m4.xlarge
    - cache.m4.2xlarge
    Default: cache.t2.micro

# Number of cache nodes must be more than 1 if auto-failover is enabled
  NumberofCacheClusters:
    Description: The number of cache clusters. Minimum of 2 required for auto-failover
    Type: Number
    MinValue: 1
    MaxValue: 3
    Default: 1

  Port:
    Description: Port for the Redis Cache to listen on
    Type: Number
    MinValue: 1025
    MaxValue: 65535
    Default: 6379

  MaintenanceWindow:
    Description: Preferred time in UTC for maintenance. Day:Time
    Type: String
    Default: "Sun:05:00-Sun:07:00"

#  SnapshotWindow:
#    Description: Time of day in 24 time to take a daily snapshot of the ElastiCache
#    Type: String
#    Default: "05:00-07:00"
#
#  SnapshotRetention:
#    Description: Number of days to retain ElastiCache snapshots
#    Type: Number
#    Default: 5

  ParameterGroupVersion:
    Description: Version ID of the parameter group. Update when making parameter group changes
    Type: String
    Default: 0.1

  # Tagging Parameters
  Environment:
    Description: Production or NonProduction
    Type: String
    Default: UAT
    AllowedValues:
      - Production
      - UAT
      - Test

  BusinessUnit:
    Description: Some Business Unit
    Type: String
    Default: Gaming
    AllowedValues:
      - Charitable
      - Corporate
      - Gaming
      - Lotteries
      - Wagering
    ConstraintDescription: Must be Charitable | Corporate | Gaming | Lotteries | Wagering

  Department:
    Description: Department
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: BrandName

  Application:
    Description: Specific Application
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: SomePlatform

  Component:
    Description: The component name
    Type: String
    MinLength: '3'
    MaxLength: '255'
    Default: ElastiCache-Redis

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: CloudFormation Template Files and Location
      Parameters:
      - BuildBucket
      - RedisSecurityGroupTemplateFile
      - ElastiCacheRedisTemplateFile
      - Route53RecordSetTemplateFile
    - Label:
        default: Cross-Stack Reference Parameters
      Parameters:
      - VPCStackName
      - DomainStackName
#      - AmplifyStackName
#      - DataConsumerStackName
#      - DataIngestionStackName
#      - KnoxStackName
#      - PosIntegrationStackName
#      - SoldiStackName
#      - SuperPortalStackName
    - Label:
        default: ElastiCache Redis Parameters
      Parameters:
      - HostName
      - CacheNodeType
      - NumberofCacheClusters
      - ParameterGroupVersion
      - Port
      - MaintenanceWindow
    - Label:
        default: Tagging Parameters
      Parameters:
      - Environment
      - BusinessUnit
      - Department
      - Application
      - Component

Conditions:
  IsHA: !Not [ !Equals [ !Ref NumberofCacheClusters, 1 ]]

Resources:

  # Create Redis Security Group
  SecurityGroup:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${RedisSecurityGroupTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component
        VPCId:
          Fn::ImportValue: !Sub ${VPCStackName}-VPCID
#        AmplifySecurityGroup:
#          Fn::ImportValue: !Sub ${AmplifyStackName}-SecurityGroup
#        DataConsumerSecurityGroup:
#          Fn::ImportValue: !Sub ${DataConsumerStackName}-SecurityGroup
#        DataIngestionSecurityGroup:
#          Fn::ImportValue: !Sub ${DataIngestionStackName}-SecurityGroup
#        KnoxSecurityGroup:
#          Fn::ImportValue: !Sub ${KnoxStackName}-SecurityGroup
#        PosIntegrationSecurityGroup:
#          Fn::ImportValue: !Sub ${PosIntegrationStackName}-SecurityGroup
#        SoldiSecurityGroup:
#          Fn::ImportValue: !Sub ${SoldiStackName}-SecurityGroup
#        SuperPortalSecurityGroup:
#          Fn::ImportValue: !Sub ${SuperPortalStackName}-SecurityGroup

  # Create Redis Replication Group cluster
  ElastiCacheRedisCluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${ElastiCacheRedisTemplateFile}
      Parameters:
        Environment: !Ref Environment
        BusinessUnit: !Ref BusinessUnit
        Department: !Ref Department
        Application: !Ref Application
        Component: !Ref Component
        CacheNodeType: !Ref CacheNodeType
        AutoFailover: !If [ IsHA, true, false ]
        NumberofCacheClusters: !Ref NumberofCacheClusters
        Port: !Ref Port
        MaintenanceWindow: !Ref MaintenanceWindow
        ParameterGroupVersion: !Ref ParameterGroupVersion
        VPCID:
          Fn::ImportValue: !Sub ${VPCStackName}-VPCID
        SubnetList:
          Fn::Join:
          - ","
          - - Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetA
            - Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetB
            - Fn::ImportValue: !Sub ${VPCStackName}-PrivateSubnetC
        SecurityGroup: !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]

  # Add Redis endpoint to Route53
  Route53RecordSet:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3-ap-southeast-2.amazonaws.com/${BuildBucket}/${Route53RecordSetTemplateFile}
      Parameters:
        AliasTarget: ''
        AliasHostedZoneId: ''
        HostedZoneName: ''
        RecordType: CNAME
        HostName: !Ref HostName
        DomainName:
          Fn::ImportValue: !Sub ${DomainStackName}-Private-DomainName
        TTL: 300
        DestinationAddress: !GetAtt [ ElastiCacheRedisCluster, Outputs.CacheConnection ]

Outputs:
  CacheConnection:
    Description: ElastiCache Connection address
    Value: !GetAtt [ElastiCacheRedisCluster, Outputs.CacheConnection]
    Export:
      Name: !Sub "${AWS::StackName}-CacheConnection"

  SecurityGroup:
    Description: The Amplify Security Group
    Value:  !GetAtt [ SecurityGroup, Outputs.SecurityGroup ]
    Export:
      Name: !Sub "${AWS::StackName}-SecurityGroup"
